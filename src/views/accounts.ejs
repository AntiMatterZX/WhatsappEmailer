<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WhatsApp Bot - Admin Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <style>
    :root {
      --sidebar-width: 250px;
      --primary-color: #128C7E;
      --secondary-color: #25D366;
      --dark-color: #075E54;
      --light-color: #DCF8C6;
    }
    body {
      min-height: 100vh;
      background-color: #f8f9fa;
    }
    .sidebar {
      width: var(--sidebar-width);
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background-color: var(--primary-color);
      color: white;
      padding-top: 1rem;
      transition: all 0.3s;
      z-index: 1000;
    }
    .sidebar-header {
      padding: 1rem;
      text-align: center;
      border-bottom: 1px solid rgba(255,255,255,0.2);
    }
    .sidebar .nav-link {
      color: rgba(255,255,255,0.8);
      padding: 0.8rem 1rem;
      transition: all 0.3s;
    }
    .sidebar .nav-link:hover, .sidebar .nav-link.active {
      background-color: var(--dark-color);
      color: white;
    }
    .sidebar .nav-link i {
      margin-right: 0.5rem;
    }
    .main-content {
      margin-left: var(--sidebar-width);
      padding: 2rem;
      transition: all 0.3s;
    }
    .card {
      border: none;
      border-radius: 10px;
      box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
      margin-bottom: 1.5rem;
    }
    .card-header {
      background-color: white;
      border-bottom: 1px solid rgba(0,0,0,0.125);
      padding: 1rem;
      font-weight: 600;
    }
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    .btn-primary:hover {
      background-color: var(--dark-color);
      border-color: var(--dark-color);
    }
    .btn-success {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);
    }
    .badge.bg-success {
      background-color: var(--secondary-color) !important;
    }
    .badge.bg-warning {
      background-color: #FFC107 !important;
    }
    .qr-loader {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 250px;
    }
    .qr-loader .spinner-border {
      width: 3rem;
      height: 3rem;
      color: var(--primary-color);
    }
    .qr-loader p {
      margin-top: 1rem;
      color: #6c757d;
    }
    .table {
      border-radius: 8px;
      overflow: hidden;
    }
    .table thead {
      background-color: #f8f9fa;
    }
    @media (max-width: 768px) {
      .sidebar {
        width: 0;
        padding: 0;
      }
      .main-content {
        margin-left: 0;
      }
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <div class="sidebar">
    <div class="sidebar-header">
      <h4><i class="bi bi-whatsapp"></i> WhatsApp Bot</h4>
    </div>
    <ul class="nav flex-column mt-3">
      <li class="nav-item">
        <a class="nav-link active" href="/accounts">
          <i class="bi bi-phone"></i> WhatsApp Accounts
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/admin/dashboard">
          <i class="bi bi-speedometer2"></i> Dashboard
        </a>
      </li>
      <li class="nav-item mt-auto">
        <a class="nav-link" href="/logout">
          <i class="bi bi-box-arrow-right"></i> Logout
        </a>
      </li>
    </ul>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2><i class="bi bi-phone me-2"></i>WhatsApp Accounts</h2>
      <button class="btn btn-primary" id="addAccountBtn">
        <i class="bi bi-plus-circle me-1"></i>Add New Account
      </button>
    </div>

    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Accounts List</span>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Label</th>
                <th>Status</th>
                <th>Last Active</th>
                <th>Active</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="accountsTableBody">
              <!-- Accounts will be loaded here -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Account Modal -->
  <div class="modal fade" id="addAccountModal" tabindex="-1" aria-labelledby="addAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addAccountModalLabel">Add New WhatsApp Account</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="addAccountForm">
            <div class="mb-3">
              <label for="accountLabel" class="form-label">Account Label</label>
              <input type="text" class="form-control" id="accountLabel" required>
            </div>
            <div class="d-grid">
              <button type="submit" class="btn btn-primary">Add Account</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- QR Code Modal -->
  <div class="modal fade" id="qrModal" tabindex="-1" aria-labelledby="qrModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="qrModalLabel">Scan QR Code</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center">
          <div id="qrCodeContainer" class="qr-loader">
            <div class="spinner-border" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p>Generating QR code...</p>
            <div id="qrLoadingTimer" class="mt-2 text-muted" style="display: none;">
              <small>This is taking longer than expected...</small>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" id="retryQrButton" class="btn btn-primary" style="display: none;">
            <i class="bi bi-arrow-repeat me-1"></i>Retry
          </button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Global variables to track modal state
    let addAccountModal = null;
    let qrModal = null;
    
    // Initialize modals
    document.addEventListener('DOMContentLoaded', function() {
      addAccountModal = new bootstrap.Modal(document.getElementById('addAccountModal'));
      qrModal = new bootstrap.Modal(document.getElementById('qrModal'));
    });
    
    async function loadAccounts() {
      try {
        const res = await fetch('/api/accounts');
        const accounts = await res.json();
        const tbody = document.getElementById('accountsTableBody');
        
        if (accounts.length === 0) {
          tbody.innerHTML = `
            <tr>
              <td colspan="5" class="text-center py-4">
                <i class="bi bi-info-circle me-2"></i>No WhatsApp accounts found. Add one to get started.
              </td>
            </tr>
          `;
          return;
        }
        
        tbody.innerHTML = '';
        accounts.forEach(acc => {
          tbody.innerHTML += `
            <tr>
              <td>${acc.label}</td>
              <td>
                <span class="badge bg-${acc.status === 'connected' ? 'success' : acc.status === 'needs_scan' ? 'warning' : 'secondary'}">
                  ${acc.status === 'connected' ? '<i class="bi bi-check-circle me-1"></i>' : ''}
                  ${acc.status === 'needs_scan' ? '<i class="bi bi-qr-code me-1"></i>' : ''}
                  ${acc.status === 'disconnected' ? '<i class="bi bi-x-circle me-1"></i>' : ''}
                  ${acc.status}
                </span>
              </td>
              <td>${acc.lastActive ? new Date(acc.lastActive).toLocaleString() : '-'}</td>
              <td>${acc.isActive ? '<span class="badge bg-primary"><i class="bi bi-check-lg me-1"></i>Active</span>' : '-'}</td>
              <td>
                ${!acc.isActive ? `<button class="btn btn-sm btn-outline-primary me-1" onclick="switchAccount('${acc._id}')">
                  <i class="bi bi-box-arrow-in-right me-1"></i>Activate
                </button>` : ''}
                <button class="btn btn-sm btn-outline-danger" onclick="removeAccount('${acc._id}')">
                  <i class="bi bi-trash me-1"></i>Remove
                </button>
              </td>
            </tr>
          `;
        });
      } catch (error) {
        console.error('Error loading accounts:', error);
      }
    }

    async function switchAccount(id) {
      if (!confirm('Activate this account?')) return;
      try {
        await fetch(`/api/accounts/${id}/switch`, { method: 'POST' });
        await loadAccounts();
        showToast('Account activated successfully!');
      } catch (error) {
        console.error('Error switching account:', error);
        showToast('Failed to activate account', 'danger');
      }
    }

    async function removeAccount(id) {
      if (!confirm('Are you sure you want to remove this account?')) return;
      try {
        await fetch(`/api/accounts/${id}`, { method: 'DELETE' });
        await loadAccounts();
        showToast('Account removed successfully!');
      } catch (error) {
        console.error('Error removing account:', error);
        showToast('Failed to remove account', 'danger');
      }
    }
    
    function showToast(message, type = 'success') {
      // Create a toast element
      const toastContainer = document.createElement('div');
      toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
      toastContainer.style.zIndex = '1050';
      
      toastContainer.innerHTML = `
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="toast-header bg-${type} text-white">
            <strong class="me-auto">${type === 'success' ? 'Success' : 'Error'}</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
          <div class="toast-body">
            ${message}
          </div>
        </div>
      `;
      
      document.body.appendChild(toastContainer);
      
      // Remove toast after 5 seconds
      setTimeout(() => {
        toastContainer.remove();
      }, 5000);
    }

    document.getElementById('addAccountBtn').onclick = () => {
      // Reset the form first
      document.getElementById('addAccountForm').reset();
      addAccountModal.show();
    };

    document.getElementById('addAccountForm').onsubmit = async function(e) {
      e.preventDefault();
      
      // Get the label and blur the submit button to avoid focus issues
      const label = document.getElementById('accountLabel').value;
      document.activeElement.blur();
      
      // Hide the first modal before showing the QR modal to prevent ARIA focus issues
      addAccountModal.hide();
      
      // Prepare the QR container with loading state
      const qrCodeContainer = document.getElementById('qrCodeContainer');
      qrCodeContainer.innerHTML = `
        <div class="qr-loader">
          <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <p>Generating QR code...</p>
          <div id="qrLoadingTimer" class="mt-2 text-muted" style="display: none;">
            <small>This is taking longer than expected...</small>
          </div>
        </div>
      `;
      
      // Set up timeout for loading message
      const loadingTimer = setTimeout(() => {
        const timerEl = document.getElementById('qrLoadingTimer');
        if (timerEl) timerEl.style.display = 'block';
      }, 10000); // Show after 10 seconds
      
      // Hide retry button initially
      document.getElementById('retryQrButton').style.display = 'none';
      
      // Show QR modal with loading indicator
      qrModal.show();
      
      // Setup retry button
      document.getElementById('retryQrButton').onclick = () => {
        document.getElementById('addAccountBtn').click();
      };
      
      try {
        console.log('Submitting account creation request for:', label);
        const res = await fetch('/api/accounts', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ label })
        });
        
        // Clear the loading timer
        clearTimeout(loadingTimer);
        
        console.log('Response status:', res.status);
        
        if (res.ok) {
          const data = await res.json();
          console.log('Response received:', data ? 'data present' : 'no data', 
                      'QR code present:', data.qrCodeDataUrl ? 'yes' : 'no');
          
          // Show QR code if available
          if (data.qrCodeDataUrl) {
            qrCodeContainer.innerHTML = `
              <img src='${data.qrCodeDataUrl}' alt='QR Code' class="img-fluid" style='max-width: 250px;' />
              <div class="mt-3 alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                Scan this QR code with WhatsApp on your phone to link this account.
              </div>
              <div class="mt-2 text-muted">
                <small>
                  <i class="bi bi-exclamation-triangle-fill me-1"></i>
                  The QR code expires after a few minutes. If it expires, please try again.
                </small>
              </div>
            `;
          } else {
            qrCodeContainer.innerHTML = `
              <div class="alert alert-success">
                <i class="bi bi-check-circle me-2"></i>
                No QR code needed. Account is already authenticated.
              </div>
            `;
          }
          
          // Refresh accounts list
          await loadAccounts();
        } else {
          // Handle error
          const errorData = await res.json().catch(() => ({ error: 'Unknown error occurred' }));
          const errorMessage = errorData.error || 'Unknown error';
          console.error('Error adding account:', errorMessage);
          
          // Show error message and retry button
          qrCodeContainer.innerHTML = `
            <div class="alert alert-danger">
              <h5><i class="bi bi-exclamation-triangle me-2"></i>Error adding account</h5>
              <p>${errorMessage}</p>
            </div>
          `;
          document.getElementById('retryQrButton').style.display = 'inline-block';
        }
      } catch (error) {
        // Clear the loading timer
        clearTimeout(loadingTimer);
        
        console.error('Exception during account creation:', error);
        qrCodeContainer.innerHTML = `
          <div class="alert alert-danger">
            <h5><i class="bi bi-wifi-off me-2"></i>Connection Error</h5>
            <p>${error.message || 'Network or server error'}</p>
            <p>Please check your connection and try again.</p>
          </div>
        `;
        document.getElementById('retryQrButton').style.display = 'inline-block';
      }
    };

    // Initial load
    loadAccounts();
  </script>
</body>
</html> 